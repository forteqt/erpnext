diff --git a/.gitignore b/.gitignore
index 89f56263ff..4b6de38d35 100644
--- a/.gitignore
+++ b/.gitignore
@@ -16,4 +16,4 @@ __pycache__
 .idea/
 .vscode/
 node_modules/
-.backportrc.json
\ No newline at end of file
+.backportrc.json
diff --git a/erpnext/accounts/doctype/purchase_invoice/purchase_invoice.json b/erpnext/accounts/doctype/purchase_invoice/purchase_invoice.json
index a48f5ea16e..652b47caaa 100644
--- a/erpnext/accounts/doctype/purchase_invoice/purchase_invoice.json
+++ b/erpnext/accounts/doctype/purchase_invoice/purchase_invoice.json
@@ -382,11 +382,13 @@
   {
    "fieldname": "bill_no",
    "fieldtype": "Data",
+   "in_global_search": 1,
    "label": "Supplier Invoice No",
+   "no_copy": 1,
    "oldfieldname": "bill_no",
    "oldfieldtype": "Data",
    "print_hide": 1,
-   "search_index": 1
+   "unique": 1
   },
   {
    "fieldname": "column_break_15",
@@ -972,7 +974,7 @@
    "read_only": 1
   },
   {
-   "default": "0",
+   "default": "1",
    "depends_on": "grand_total",
    "fieldname": "disable_rounded_total",
    "fieldtype": "Check",
@@ -1613,7 +1615,7 @@
  "idx": 204,
  "is_submittable": 1,
  "links": [],
- "modified": "2024-01-26 10:46:00.469053",
+ "modified": "2024-03-15 12:14:13.602719",
  "modified_by": "Administrator",
  "module": "Accounts",
  "name": "Purchase Invoice",
diff --git a/erpnext/accounts/doctype/purchase_invoice/purchase_invoice.py b/erpnext/accounts/doctype/purchase_invoice/purchase_invoice.py
index c68ff838dd..d7c590d496 100644
--- a/erpnext/accounts/doctype/purchase_invoice/purchase_invoice.py
+++ b/erpnext/accounts/doctype/purchase_invoice/purchase_invoice.py
@@ -60,26 +60,15 @@ class PurchaseInvoice(BuyingController):
 	from typing import TYPE_CHECKING
 
 	if TYPE_CHECKING:
-		from frappe.types import DF
-
 		from erpnext.accounts.doctype.advance_tax.advance_tax import AdvanceTax
 		from erpnext.accounts.doctype.payment_schedule.payment_schedule import PaymentSchedule
 		from erpnext.accounts.doctype.pricing_rule_detail.pricing_rule_detail import PricingRuleDetail
-		from erpnext.accounts.doctype.purchase_invoice_advance.purchase_invoice_advance import (
-			PurchaseInvoiceAdvance,
-		)
-		from erpnext.accounts.doctype.purchase_invoice_item.purchase_invoice_item import (
-			PurchaseInvoiceItem,
-		)
-		from erpnext.accounts.doctype.purchase_taxes_and_charges.purchase_taxes_and_charges import (
-			PurchaseTaxesandCharges,
-		)
-		from erpnext.accounts.doctype.tax_withheld_vouchers.tax_withheld_vouchers import (
-			TaxWithheldVouchers,
-		)
-		from erpnext.buying.doctype.purchase_receipt_item_supplied.purchase_receipt_item_supplied import (
-			PurchaseReceiptItemSupplied,
-		)
+		from erpnext.accounts.doctype.purchase_invoice_advance.purchase_invoice_advance import PurchaseInvoiceAdvance
+		from erpnext.accounts.doctype.purchase_invoice_item.purchase_invoice_item import PurchaseInvoiceItem
+		from erpnext.accounts.doctype.purchase_taxes_and_charges.purchase_taxes_and_charges import PurchaseTaxesandCharges
+		from erpnext.accounts.doctype.tax_withheld_vouchers.tax_withheld_vouchers import TaxWithheldVouchers
+		from erpnext.buying.doctype.purchase_receipt_item_supplied.purchase_receipt_item_supplied import PurchaseReceiptItemSupplied
+		from frappe.types import DF
 
 		additional_discount_percentage: DF.Float
 		address_display: DF.SmallText | None
@@ -176,23 +165,12 @@ class PurchaseInvoice(BuyingController):
 		shipping_address: DF.Link | None
 		shipping_address_display: DF.SmallText | None
 		shipping_rule: DF.Link | None
-		status: DF.Literal[
-			"",
-			"Draft",
-			"Return",
-			"Debit Note Issued",
-			"Submitted",
-			"Paid",
-			"Partly Paid",
-			"Unpaid",
-			"Overdue",
-			"Cancelled",
-			"Internal Transfer",
-		]
+		status: DF.Literal["", "Draft", "Return", "Debit Note Issued", "Submitted", "Paid", "Partly Paid", "Unpaid", "Overdue", "Cancelled", "Internal Transfer"]
 		subscription: DF.Link | None
 		supplied_items: DF.Table[PurchaseReceiptItemSupplied]
 		supplier: DF.Link
 		supplier_address: DF.Link | None
+		supplier_group: DF.Link | None
 		supplier_name: DF.Data | None
 		supplier_warehouse: DF.Link | None
 		tax_category: DF.Link | None
diff --git a/erpnext/accounts/doctype/sales_invoice/sales_invoice.js b/erpnext/accounts/doctype/sales_invoice/sales_invoice.js
index ef1f6bd8d8..7e9096ccdd 100644
--- a/erpnext/accounts/doctype/sales_invoice/sales_invoice.js
+++ b/erpnext/accounts/doctype/sales_invoice/sales_invoice.js
@@ -310,7 +310,9 @@ erpnext.accounts.SalesInvoiceController = class SalesInvoiceController extends e
 				price_list: this.frm.doc.selling_price_list,
 				pos_profile: pos_profile
 			}, function() {
-				me.apply_pricing_rule();
+				if(this.frm.doc.ignore_pricing_rule == 0){
+					me.apply_pricing_rule();
+				}
 			});
 
 		if(this.frm.doc.customer) {
diff --git a/erpnext/accounts/doctype/sales_invoice/sales_invoice.json b/erpnext/accounts/doctype/sales_invoice/sales_invoice.json
index 5e2187e91f..52c32e27a5 100644
--- a/erpnext/accounts/doctype/sales_invoice/sales_invoice.json
+++ b/erpnext/accounts/doctype/sales_invoice/sales_invoice.json
@@ -29,6 +29,8 @@
   "update_billed_amount_in_delivery_note",
   "is_debit_note",
   "amended_from",
+  "section_break_cwip",
+  "ref",
   "accounting_dimensions_section",
   "cost_center",
   "dimension_col_break",
@@ -483,6 +485,7 @@
    "label": "Billing Address"
   },
   {
+   "allow_on_submit": 1,
    "fieldname": "customer_address",
    "fieldtype": "Link",
    "hide_days": 1,
@@ -554,6 +557,7 @@
    "hide_seconds": 1
   },
   {
+   "allow_on_submit": 1,
    "fieldname": "shipping_address_name",
    "fieldtype": "Link",
    "hide_days": 1,
@@ -572,6 +576,7 @@
    "read_only": 1
   },
   {
+   "allow_on_submit": 1,
    "fieldname": "company_address",
    "fieldtype": "Link",
    "hide_days": 1,
@@ -1972,7 +1977,7 @@
    "label": "Is Rate Adjustment Entry (Debit Note)"
   },
   {
-   "default": "0",
+   "default": "1",
    "depends_on": "grand_total",
    "fieldname": "disable_rounded_total",
    "fieldtype": "Check",
@@ -2170,6 +2175,19 @@
    "fieldtype": "Check",
    "label": "Don't Create Loyalty Points",
    "no_copy": 1
+  },
+  {
+   "collapsible": 1,
+   "fieldname": "section_break_cwip",
+   "fieldtype": "Section Break",
+   "label": "Reference"
+  },
+  {
+   "allow_on_submit": 1,
+   "fieldname": "ref",
+   "fieldtype": "Text Editor",
+   "hidden": 1,
+   "label": "Reference"
   }
  ],
  "icon": "fa fa-file-text",
@@ -2182,7 +2200,7 @@
    "link_fieldname": "consolidated_invoice"
   }
  ],
- "modified": "2024-01-02 17:25:46.027523",
+ "modified": "2024-03-15 12:12:29.695193",
  "modified_by": "Administrator",
  "module": "Accounts",
  "name": "Sales Invoice",
diff --git a/erpnext/accounts/doctype/sales_invoice/sales_invoice.py b/erpnext/accounts/doctype/sales_invoice/sales_invoice.py
index abc0694a63..5a15cafffd 100644
--- a/erpnext/accounts/doctype/sales_invoice/sales_invoice.py
+++ b/erpnext/accounts/doctype/sales_invoice/sales_invoice.py
@@ -51,25 +51,16 @@ class SalesInvoice(SellingController):
 	from typing import TYPE_CHECKING
 
 	if TYPE_CHECKING:
-		from frappe.types import DF
-
 		from erpnext.accounts.doctype.payment_schedule.payment_schedule import PaymentSchedule
 		from erpnext.accounts.doctype.pricing_rule_detail.pricing_rule_detail import PricingRuleDetail
-		from erpnext.accounts.doctype.sales_invoice_advance.sales_invoice_advance import (
-			SalesInvoiceAdvance,
-		)
+		from erpnext.accounts.doctype.sales_invoice_advance.sales_invoice_advance import SalesInvoiceAdvance
 		from erpnext.accounts.doctype.sales_invoice_item.sales_invoice_item import SalesInvoiceItem
-		from erpnext.accounts.doctype.sales_invoice_payment.sales_invoice_payment import (
-			SalesInvoicePayment,
-		)
-		from erpnext.accounts.doctype.sales_invoice_timesheet.sales_invoice_timesheet import (
-			SalesInvoiceTimesheet,
-		)
-		from erpnext.accounts.doctype.sales_taxes_and_charges.sales_taxes_and_charges import (
-			SalesTaxesandCharges,
-		)
+		from erpnext.accounts.doctype.sales_invoice_payment.sales_invoice_payment import SalesInvoicePayment
+		from erpnext.accounts.doctype.sales_invoice_timesheet.sales_invoice_timesheet import SalesInvoiceTimesheet
+		from erpnext.accounts.doctype.sales_taxes_and_charges.sales_taxes_and_charges import SalesTaxesandCharges
 		from erpnext.selling.doctype.sales_team.sales_team import SalesTeam
 		from erpnext.stock.doctype.packed_item.packed_item import PackedItem
+		from frappe.types import DF
 
 		account_for_change_amount: DF.Link | None
 		additional_discount_account: DF.Link | None
@@ -165,6 +156,7 @@ class SalesInvoice(SellingController):
 		pricing_rules: DF.Table[PricingRuleDetail]
 		project: DF.Link | None
 		redeem_loyalty_points: DF.Check
+		ref: DF.TextEditor | None
 		remarks: DF.SmallText | None
 		repost_required: DF.Check
 		represents_company: DF.Link | None
@@ -183,22 +175,7 @@ class SalesInvoice(SellingController):
 		shipping_address_name: DF.Link | None
 		shipping_rule: DF.Link | None
 		source: DF.Link | None
-		status: DF.Literal[
-			"",
-			"Draft",
-			"Return",
-			"Credit Note Issued",
-			"Submitted",
-			"Paid",
-			"Partly Paid",
-			"Unpaid",
-			"Unpaid and Discounted",
-			"Partly Paid and Discounted",
-			"Overdue and Discounted",
-			"Overdue",
-			"Cancelled",
-			"Internal Transfer",
-		]
+		status: DF.Literal["", "Draft", "Return", "Credit Note Issued", "Submitted", "Paid", "Partly Paid", "Unpaid", "Unpaid and Discounted", "Partly Paid and Discounted", "Overdue and Discounted", "Overdue", "Cancelled", "Internal Transfer"]
 		subscription: DF.Link | None
 		tax_category: DF.Link | None
 		tax_id: DF.Data | None
diff --git a/erpnext/public/js/utils/contact_address_quick_entry.js b/erpnext/public/js/utils/contact_address_quick_entry.js
index adabf08c20..da47c82e23 100644
--- a/erpnext/public/js/utils/contact_address_quick_entry.js
+++ b/erpnext/public/js/utils/contact_address_quick_entry.js
@@ -78,15 +78,17 @@ frappe.ui.form.ContactAddressQuickEntryForm = class ContactAddressQuickEntryForm
 			fieldtype: "Data"
 		},
 		{
-			label: __("State"),
-			fieldname: "state",
-			fieldtype: "Data"
+			label: __("Emirate"),
+			fieldname: "emirate",
+			fieldtype: "Select",
+			options:["Abu Dhabi", "Ajman", "Dubai", "Fujairah", "Ras Al Khaimah", "Sharjah", "Umm Al Quwain"]
 		},
 		{
 			label: __("Country"),
 			fieldname: "country",
 			fieldtype: "Link",
-			options: "Country"
+			options: "Country",
+			default: "United Arab Emirates"
 		},
 		{
 			label: __("Customer POS Id"),
diff --git a/erpnext/public/js/utils/customer_quick_entry.js b/erpnext/public/js/utils/customer_quick_entry.js
index b2532085f6..c6c9b1603c 100644
--- a/erpnext/public/js/utils/customer_quick_entry.js
+++ b/erpnext/public/js/utils/customer_quick_entry.js
@@ -1,3 +1,4 @@
 frappe.provide('frappe.ui.form');
 
-frappe.ui.form.CustomerQuickEntryForm = frappe.ui.form.ContactAddressQuickEntryForm;
+
+frappe.ui.form.CustomerQuickEntryForm = frappe.ui.form.ContactAddressQuickEntryForm;
\ No newline at end of file
diff --git a/erpnext/regional/report/uae_vat_201/uae_vat_201.js b/erpnext/regional/report/uae_vat_201/uae_vat_201.js
index eaefc0420a..0ff5a3653f 100644
--- a/erpnext/regional/report/uae_vat_201/uae_vat_201.js
+++ b/erpnext/regional/report/uae_vat_201/uae_vat_201.js
@@ -10,7 +10,11 @@ frappe.query_reports["UAE VAT 201"] = {
 			"fieldtype": "Link",
 			"options": "Company",
 			"reqd": 1,
-			"default": frappe.defaults.get_user_default("Company")
+			"default": frappe.defaults.get_user_default("Company"),
+			"on_change": function(query_report){
+				query_report.set_filter_value('company_trn', []);
+				query_report.refresh();
+			}
 		},
 		{
 			"fieldname": "from_date",
@@ -26,6 +30,28 @@ frappe.query_reports["UAE VAT 201"] = {
 			"reqd": 1,
 			"default": frappe.datetime.get_today()
 		},
+		{
+			"fieldname": "payment_status",
+			"label": __("Payment Status"),
+			"fieldtype": "Select",
+			"reqd": 0,
+			"options": "\nPaid\nPartly Paid\nUnpaid\nUnpaid and Discounted"
+		},
+		{
+			"fieldname": "company_trn",
+			"label": __("Company TRN"),
+			"fieldtype": "MultiSelectList",
+			"options": "Address",
+			"reqd": 0,
+			"get_data": function(txt){
+				if (frappe.query_report.get_filter_value('company')){
+					return frappe.db.get_list("Address", {filters: {'is_your_company_address': 1},fields: ['custom_trn as value', 'custom_trn as label','custom_trn as description'], distinct: 1})
+				}
+			},
+			on_change: function(query_report) {
+				query_report.refresh();
+			}
+		}
 	],
 	"formatter": function(value, row, column, data, default_formatter) {
 		if (data
diff --git a/erpnext/regional/report/uae_vat_201/uae_vat_201.py b/erpnext/regional/report/uae_vat_201/uae_vat_201.py
index 6ef21e52ca..5aeb0bf12f 100644
--- a/erpnext/regional/report/uae_vat_201/uae_vat_201.py
+++ b/erpnext/regional/report/uae_vat_201/uae_vat_201.py
@@ -5,11 +5,10 @@
 import frappe
 from frappe import _
 
-
 def execute(filters=None):
 	columns = get_columns()
 	data, emirates, amounts_by_emirate = get_data(filters)
-	return columns, data
+	return columns, data 
 
 
 def get_columns():
@@ -146,6 +145,10 @@ def get_total_emiratewise(filters):
 				`tabSales Invoice Item` i inner join `tabSales Invoice` s
 			on
 				i.parent = s.name
+			inner 
+				join `tabAddress` a
+			on
+				s.company_address = a.name
 			where
 				s.docstatus = 1 and  i.is_exempt != 1 and i.is_zero_rated != 1
 				{where_conditions}
@@ -182,6 +185,10 @@ def get_reverse_charge_total(filters):
 	query_filters = get_filters(filters)
 	query_filters.append(["reverse_charge", "=", "Y"])
 	query_filters.append(["docstatus", "=", 1])
+	if filters.payment_status != "":
+		query_filters.append(["status", "in", filters.payment_status])
+	# if filters.company_trn != "":
+	# 	query_filters.append(["status", "in", filters.payment_status])
 	try:
 		return (
 			frappe.db.get_all(
@@ -203,6 +210,10 @@ def get_reverse_charge_tax(filters):
 			`tabPurchase Invoice` p inner join `tabGL Entry` gl
 		on
 			gl.voucher_no =  p.name
+		inner 
+			join `tabAddress` a
+		on
+			p.billing_address = a.name
 		where
 			p.reverse_charge = "Y"
 			and p.docstatus = 1
@@ -247,6 +258,10 @@ def get_reverse_charge_recoverable_tax(filters):
 			`tabPurchase Invoice` p  inner join `tabGL Entry` gl
 		on
 			gl.voucher_no = p.name
+		inner 
+			join `tabAddress` a
+		on
+			p.billing_address = a.name
 		where
 			p.reverse_charge = "Y"
 			and p.docstatus = 1
@@ -266,20 +281,76 @@ def get_reverse_charge_recoverable_tax(filters):
 def get_conditions_join(filters):
 	"""The conditions to be used to filter data to calculate the total vat."""
 	conditions = ""
-	for opts in (
-		("company", " and p.company=%(company)s"),
-		("from_date", " and p.posting_date>=%(from_date)s"),
-		("to_date", " and p.posting_date<=%(to_date)s"),
-	):
-		if filters.get(opts[0]):
-			conditions += opts[1]
+	if filters.payment_status == "" and filters.company_trn == "":
+		for opts in (
+			("company", " and p.company=%(company)s"),
+			("from_date", " and p.posting_date>=%(from_date)s"),
+			("to_date", " and p.posting_date<=%(to_date)s"),
+		):
+			if filters.get(opts[0]):
+				conditions += opts[1]
+	elif filters.payment_status == "":
+		for opts in (
+			("company", " and p.company=%(company)s"),
+			("from_date", " and p.posting_date>=%(from_date)s"),
+			("to_date", " and p.posting_date<=%(to_date)s"),
+			("company_trn", " and a.custom_trn in %(company_trn)s"),
+		):
+			if filters.get(opts[0]):
+				conditions += opts[1]
+	elif filters.company_trn == "":
+		for opts in (
+			("company", " and p.company=%(company)s"),
+			("from_date", " and p.posting_date>=%(from_date)s"),
+			("to_date", " and p.posting_date<=%(to_date)s"),
+			("payment_status", "and p.status=%(payment_status)s")
+		):
+			if filters.get(opts[0]):
+				conditions += opts[1]
+	else:
+		for opts in (
+			("company", " and p.company=%(company)s"),
+			("from_date", " and p.posting_date>=%(from_date)s"),
+			("to_date", " and p.posting_date<=%(to_date)s"),
+			("payment_status", "and p.status=%(payment_status)s"),
+			("company_trn", " and a.custom_trn in %(company_trn)s")
+		):
+			if filters.get(opts[0]):
+				conditions += opts[1]
 	return conditions
 
 
 def get_standard_rated_expenses_total(filters):
 	"""Returns the sum of the total of each Purchase invoice made with recoverable reverse charge."""
+	conditions = get_conditions_join(filters)
+	try: 
+		return (
+			frappe.db.sql(
+				"""
+			select
+				sum(p.base_net_total) as total
+			from
+				`tabPurchase Invoice Item` i inner join `tabPurchase Invoice` p
+			on
+				i.parent = p.name
+			inner 
+				join `tabAddress` a
+			on
+				p.billing_address = a.name
+			where
+				p.docstatus = 1
+				{where_conditions} ;
+			""".format(
+					where_conditions=conditions
+				),
+				filters,
+			)[0][0]
+			or 0
+		)
+	except (IndexError,TypeError):
+		return 0
 	query_filters = get_filters(filters)
-	query_filters.append(["recoverable_standard_rated_expenses", ">", 0])
+	# query_filters.append(["recoverable_standard_rated_expenses", ">", 0])
 	query_filters.append(["docstatus", "=", 1])
 	try:
 		return (
@@ -294,15 +365,42 @@ def get_standard_rated_expenses_total(filters):
 
 def get_standard_rated_expenses_tax(filters):
 	"""Returns the sum of the tax of each Purchase invoice made."""
+	conditions = get_conditions_join(filters)
+	try: 
+		return (
+			frappe.db.sql(
+				"""
+			select
+				sum(p.total_taxes_and_charges) as total
+			from
+				`tabPurchase Invoice Item` i inner join `tabPurchase Invoice` p
+			on
+				i.parent = p.name
+			inner 
+				join `tabAddress` a
+			on
+				p.billing_address = a.name
+			where
+				p.docstatus = 1
+				{where_conditions} ;
+			""".format(
+					where_conditions=conditions
+				),
+				filters,
+			)[0][0]
+			or 0
+		)
+	except (IndexError,TypeError):
+		return 0
 	query_filters = get_filters(filters)
-	query_filters.append(["recoverable_standard_rated_expenses", ">", 0])
+	# query_filters.append(["recoverable_standard_rated_expenses", ">", 0])
 	query_filters.append(["docstatus", "=", 1])
 	try:
 		return (
 			frappe.db.get_all(
 				"Purchase Invoice",
 				filters=query_filters,
-				fields=["sum(recoverable_standard_rated_expenses)"],
+				fields=["sum(total_taxes_and_charges)"],
 				as_list=True,
 				limit=1,
 			)[0][0]
@@ -361,6 +459,10 @@ def get_zero_rated_total(filters):
 				`tabSales Invoice Item` i inner join `tabSales Invoice` s
 			on
 				i.parent = s.name
+			inner 
+				join `tabAddress` a
+			on
+				s.company_address = a.name
 			where
 				s.docstatus = 1 and  i.is_zero_rated = 1
 				{where_conditions} ;
@@ -388,6 +490,10 @@ def get_exempt_total(filters):
 				`tabSales Invoice Item` i inner join `tabSales Invoice` s
 			on
 				i.parent = s.name
+			inner 
+				join `tabAddress` a
+			on
+				s.company_address = a.name
 			where
 				s.docstatus = 1 and  i.is_exempt = 1
 				{where_conditions} ;
@@ -405,11 +511,42 @@ def get_exempt_total(filters):
 def get_conditions(filters):
 	"""The conditions to be used to filter data to calculate the total sale."""
 	conditions = ""
-	for opts in (
-		("company", " and company=%(company)s"),
-		("from_date", " and posting_date>=%(from_date)s"),
-		("to_date", " and posting_date<=%(to_date)s"),
-	):
-		if filters.get(opts[0]):
-			conditions += opts[1]
+
+	if filters.payment_status == "" and filters.company_trn == "":
+		for opts in (
+			("company", " and s.company=%(company)s"),
+			("from_date", " and s.posting_date>=%(from_date)s"),
+			("to_date", " and s.posting_date<=%(to_date)s"),
+		):
+			if filters.get(opts[0]):
+				conditions += opts[1]
+	elif filters.payment_status == "":
+		for opts in (
+			("company", " and s.company=%(company)s"),
+			("from_date", " and s.posting_date>=%(from_date)s"),
+			("to_date", " and s.posting_date<=%(to_date)s"),
+			("company_trn", " and a.custom_trn in %(company_trn)s"),
+		):
+			if filters.get(opts[0]):
+				conditions += opts[1]
+	elif filters.company_trn == "":
+		for opts in (
+			("company", " and s.company=%(company)s"),
+			("from_date", " and s.posting_date>=%(from_date)s"),
+			("to_date", " and s.posting_date<=%(to_date)s"),
+			("payment_status", "and s.status=%(payment_status)s")
+		):
+			if filters.get(opts[0]):
+				conditions += opts[1]
+	else:
+		for opts in (
+			("company", " and s.company=%(company)s"),
+			("from_date", " and s.posting_date>=%(from_date)s"),
+			("to_date", " and s.posting_date<=%(to_date)s"),
+			("payment_status", "and s.status=%(payment_status)s"),
+			("company_trn", " and a.custom_trn in %(company_trn)s"),
+		):
+			frappe.errprint(filters.company_trn)
+			if filters.get(opts[0]):
+				conditions += opts[1]
 	return conditions
diff --git a/erpnext/selling/doctype/customer/customer.py b/erpnext/selling/doctype/customer/customer.py
index 3744922a1a..89b98fef71 100644
--- a/erpnext/selling/doctype/customer/customer.py
+++ b/erpnext/selling/doctype/customer/customer.py
@@ -764,6 +764,7 @@ def make_address(args, is_primary_address=1, is_shipping_address=1):
 			"address_line2": args.get("address_line2"),
 			"city": args.get("city"),
 			"state": args.get("state"),
+			"emirate": args.get("emirate"),
 			"pincode": args.get("pincode"),
 			"country": args.get("country"),
 			"is_primary_address": is_primary_address,
diff --git a/erpnext/setup/doctype/party_type/party_type.json b/erpnext/setup/doctype/party_type/party_type.json
index 00f06a0892..2227521585 100644
--- a/erpnext/setup/doctype/party_type/party_type.json
+++ b/erpnext/setup/doctype/party_type/party_type.json
@@ -1,164 +1,87 @@
 {
- "allow_copy": 0, 
- "allow_guest_to_view": 0, 
- "allow_import": 0, 
- "allow_rename": 0, 
- "autoname": "field:party_type", 
- "beta": 0, 
- "creation": "2016-12-26 11:26:51.508286", 
- "custom": 0, 
- "docstatus": 0, 
- "doctype": "DocType", 
- "document_type": "", 
- "editable_grid": 1, 
- "engine": "InnoDB", 
+ "actions": [],
+ "autoname": "field:party_type",
+ "creation": "2016-12-26 11:26:51.508286",
+ "doctype": "DocType",
+ "editable_grid": 1,
+ "engine": "InnoDB",
+ "field_order": [
+  "party_type",
+  "account_type"
+ ],
  "fields": [
   {
-   "allow_bulk_edit": 0, 
-   "allow_on_submit": 0, 
-   "bold": 0, 
-   "collapsible": 0, 
-   "columns": 0, 
-   "fieldname": "party_type", 
-   "fieldtype": "Link", 
-   "hidden": 0, 
-   "ignore_user_permissions": 0, 
-   "ignore_xss_filter": 0, 
-   "in_filter": 0, 
-   "in_global_search": 0, 
-   "in_list_view": 1, 
-   "in_standard_filter": 0, 
-   "label": "Party Type", 
-   "length": 0, 
-   "no_copy": 0, 
-   "options": "DocType", 
-   "permlevel": 0, 
-   "precision": "", 
-   "print_hide": 0, 
-   "print_hide_if_no_value": 0, 
-   "read_only": 0, 
-   "remember_last_selected_value": 0, 
-   "report_hide": 0, 
-   "reqd": 1, 
-   "search_index": 0, 
-   "set_only_once": 0, 
-   "translatable": 0, 
-   "unique": 0
-  }, 
+   "fieldname": "party_type",
+   "fieldtype": "Link",
+   "in_list_view": 1,
+   "label": "Party Type",
+   "options": "DocType",
+   "reqd": 1,
+   "unique": 1
+  },
   {
-   "allow_bulk_edit": 0, 
-   "allow_on_submit": 0, 
-   "bold": 0, 
-   "collapsible": 0, 
-   "columns": 0, 
-   "fieldname": "account_type", 
-   "fieldtype": "Select", 
-   "hidden": 0, 
-   "ignore_user_permissions": 0, 
-   "ignore_xss_filter": 0, 
-   "in_filter": 0, 
-   "in_global_search": 0, 
-   "in_list_view": 1, 
-   "in_standard_filter": 0, 
-   "label": "Account Type", 
-   "length": 0, 
-   "no_copy": 0, 
-   "options": "Payable\nReceivable", 
-   "permlevel": 0, 
-   "precision": "", 
-   "print_hide": 0, 
-   "print_hide_if_no_value": 0, 
-   "read_only": 0, 
-   "remember_last_selected_value": 0, 
-   "report_hide": 0, 
-   "reqd": 1, 
-   "search_index": 0, 
-   "set_only_once": 0, 
-   "translatable": 0, 
-   "unique": 0
+   "fieldname": "account_type",
+   "fieldtype": "Select",
+   "in_list_view": 1,
+   "label": "Account Type",
+   "options": "Payable\nReceivable",
+   "reqd": 1
   }
- ], 
- "has_web_view": 0, 
- "hide_heading": 0, 
- "hide_toolbar": 0, 
- "idx": 0, 
- "image_view": 0, 
- "in_create": 1, 
- "is_submittable": 0, 
- "issingle": 0, 
- "istable": 0, 
- "max_attachments": 0, 
- "modified": "2018-04-26 13:00:49.457439", 
- "modified_by": "Administrator", 
- "module": "Setup", 
- "name": "Party Type", 
- "name_case": "", 
- "owner": "Administrator", 
+ ],
+ "links": [],
+ "modified": "2024-02-19 08:51:28.538776",
+ "modified_by": "Administrator",
+ "module": "Setup",
+ "name": "Party Type",
+ "naming_rule": "By fieldname",
+ "owner": "Administrator",
  "permissions": [
   {
-   "amend": 0, 
-   "cancel": 0, 
-   "create": 0, 
-   "delete": 0, 
-   "email": 1, 
-   "export": 1, 
-   "if_owner": 0, 
-   "import": 0, 
-   "permlevel": 0, 
-   "print": 1, 
-   "read": 1, 
-   "report": 1, 
-   "role": "System Manager", 
-   "set_user_permissions": 0, 
-   "share": 1, 
-   "submit": 0, 
-   "write": 0
-  }, 
+   "create": 1,
+   "delete": 1,
+   "email": 1,
+   "export": 1,
+   "print": 1,
+   "read": 1,
+   "report": 1,
+   "role": "System Manager",
+   "share": 1,
+   "write": 1
+  },
   {
-   "amend": 0, 
-   "cancel": 0, 
-   "create": 0, 
-   "delete": 0, 
-   "email": 1, 
-   "export": 1, 
-   "if_owner": 0, 
-   "import": 0, 
-   "permlevel": 0, 
-   "print": 1, 
-   "read": 1, 
-   "report": 1, 
-   "role": "Accounts User", 
-   "set_user_permissions": 0, 
-   "share": 1, 
-   "submit": 0, 
-   "write": 0
-  }, 
+   "create": 1,
+   "delete": 1,
+   "email": 1,
+   "export": 1,
+   "print": 1,
+   "read": 1,
+   "report": 1,
+   "role": "Administrator",
+   "share": 1,
+   "write": 1
+  },
   {
-   "amend": 0, 
-   "cancel": 0, 
-   "create": 0, 
-   "delete": 0, 
-   "email": 1, 
-   "export": 1, 
-   "if_owner": 0, 
-   "import": 0, 
-   "permlevel": 0, 
-   "print": 1, 
-   "read": 1, 
-   "report": 1, 
-   "role": "Accounts Manager", 
-   "set_user_permissions": 0, 
-   "share": 1, 
-   "submit": 0, 
-   "write": 0
+   "email": 1,
+   "export": 1,
+   "print": 1,
+   "read": 1,
+   "report": 1,
+   "role": "Accounts User",
+   "share": 1
+  },
+  {
+   "email": 1,
+   "export": 1,
+   "print": 1,
+   "read": 1,
+   "report": 1,
+   "role": "Accounts Manager",
+   "share": 1
   }
- ], 
- "quick_entry": 0, 
- "read_only": 0, 
- "read_only_onload": 0, 
- "show_name_in_global_search": 1, 
- "sort_field": "modified", 
- "sort_order": "DESC", 
- "track_changes": 1, 
- "track_seen": 0
+ ],
+ "show_name_in_global_search": 1,
+ "sort_field": "modified",
+ "sort_order": "DESC",
+ "states": [],
+ "track_changes": 1
 }
\ No newline at end of file
